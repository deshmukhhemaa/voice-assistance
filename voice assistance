# Task 1 Voice Assisting


import pyttsx3
import datetime
import speech_recognition as sr
from gtts import gTTS
import wikipedia
import webbrowser
import random

engine = pyttsx3.init('sapi5')
voices= engine.getProperty('voices') 
engine.setProperty('voice', voices[0].id)

def speak(audio):
    engine.say(audio) 
    engine.runAndWait()

responses = {
    "Hello": ["Hello How can I help you?"],
}

def chatbot_response(user_input):
    user_input = user_input.lower()

    for key in responses:
        if key.lower() in user_input:
            return random.choice(responses[key])

    return "I'm sorry, I don't understand that."

recognizer = sr.Recognizer()
text_to_speech = pyttsx3.init()

#while True:
if 1:
        with sr.Microphone() as source:
            print("Listening...")
            audio = recognizer.listen(source)

        user_input = recognizer.recognize_google(audio)
        print("You:", user_input)
        response = chatbot_response(user_input)
        print("Personal Assistant:", response)

        text_to_speech.say(response)
        text_to_speech.runAndWait()


def wishme():
    
 hour = int(datetime.datetime.now().hour)
    
def takeCommand():

   r = sr.Recognizer()
   with sr.Microphone() as source:
       print("Listening....")
       r.pause_threshold = 1
       audio =r.listen(source)
   try:
       print("Recognizing....")
       query = r.recognize_google(audio, language='en-in')
       print(f"User said: {query}\n")

   except Exception as e:
       #print(e)
       print("say that again please...") 
       return "None"
   return query

if __name__ == "__main__":
    wishme()
    while True:
    #if 1:
        query = takeCommand().lower() 

        if 'wikipedia' in query:
            speak('Searching Wikipedia...')
            query = query.replace("wikipedia", "")
            results = wikipedia.summary(query, sentences=1) 
            speak("According to Wikipedia")
            print(results)
            speak(results)
   
        elif 'open youtube' in query:
            webbrowser.open("youtube.com")

        elif 'open google' in query:
            webbrowser.open("google.com")

        elif 'the time' in query:
            strTime = datetime.datetime.now().strftime("%H:%M:%S")    
            speak(f"the time is {strTime}")  

        elif 'the date' in query:
            strDate = datetime.datetime.now().strftime("%Y-%m-%d")    
            speak(f"the Date is {strDate}")          
    
        elif 'exit' in query:
            print("Personal Assistant: Goodbye!")
            text_to_speech.say("Goodbye!")
            text_to_speech.runAndWait()
            break   